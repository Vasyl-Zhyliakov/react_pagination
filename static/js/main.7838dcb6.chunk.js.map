{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","arrOfPages","Array","from","length","_","i","className","cn","disabled","href","onClick","map","page","active","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","pageNumber","setPageNumber","lastIndex","firstIndex","value","id","onChange","event","target","option","htmlFor","slice","item","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQC,KAAKC,KAAKN,EAAQC,GAC1BM,EAAaC,MAAMC,KAAK,CAAEC,OAAQN,IAAS,SAACO,EAAGC,GAAJ,OAAUA,EAAI,KAc/D,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,YAAa,CAC7BC,SAA0B,IAAhBb,IADZ,SAIE,mBACE,UAAQ,WACRW,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBd,EACfe,QAvBqB,WACvBf,EAAc,GAChBC,EAAaD,EAAc,IAgBzB,oBAWDK,EAAWW,KAAI,SAAAC,GAAI,OAClB,oBAEEN,UAAWC,IAAG,YAAa,CAAEM,OAAQlB,IAAgBiB,IAFvD,SAIE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMd,EAAagB,IAJ9B,SAMGA,KATEA,MAcT,oBAAIN,UAAWC,IAAG,YAAa,CAC7BC,SAAUb,IAAgBK,EAAWA,EAAWG,OAAS,KAD3D,SAIE,mBACE,UAAQ,WACRG,UAAU,YACVG,KAAK,QACL,gBAAed,IAAgBK,EAAWA,EAAWG,OAAS,GAC9DO,QAhDqB,WACvBf,EAAcK,EAAWA,EAAWG,OAAS,IAC/CP,EAAaD,EAAc,IAyCzB,wBC9DR,IAAMmB,ECNC,SAAoBZ,EAAca,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIf,EAAMe,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAoCD,mBAAS,GAA7C,mBAAOE,EAAP,KAAmBC,EAAnB,KACMC,EAAY/B,EAAU6B,EACtBG,EAAaD,EAAY/B,EAO/B,OACE,sBAAKY,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWiB,EADX,mBACgCG,EAAa,EAD7C,cACoDD,EAAYX,EAAMX,OAASW,EAAMX,OAASsB,EAD9F,eAC8GX,EAAMX,OADpH,OAIA,sBAAKG,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACEqB,MAAOjC,EACP,UAAQ,kBACRkC,GAAG,kBACHtB,UAAU,eACVuB,SApBkB,SAACC,GAC3BR,GAAYQ,EAAMC,OAAOJ,OACzBH,EAAc,IAaR,SArBQ,CAAC,EAAG,EAAG,GAAI,IA4BRb,KAAI,SAAAqB,GAAM,OAAI,wBAAQL,MAAOK,EAAf,SAAwBA,WAInD,uBAAOC,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEb,MAAOqB,EAAMX,OACbT,QAASA,EACTC,YAAa4B,EACb3B,aAAc4B,IAGhB,6BACGV,EACEoB,MAAMR,EAAYD,GAClBd,KAAI,SAAAwB,GAAI,OAAI,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YEtD/CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7838dcb6.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\ntype Props = {\n  total: number\n  perPage:number\n  currentPage:number\n  onPageChange: (page: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = Math.ceil(total / perPage);\n  const arrOfPages = Array.from({ length: pages }, (_, i) => i + 1);\n\n  const handleNextLinkChange = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handlePrevLinkChange = () => {\n    if (currentPage < arrOfPages[arrOfPages.length - 1]) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handleNextLinkChange}\n        >\n          «\n        </a>\n      </li>\n\n      {arrOfPages.map(page => (\n        <li\n          key={page}\n          className={cn('page-item', { active: currentPage === page })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn('page-item', {\n        disabled: currentPage === arrOfPages[arrOfPages.length - 1],\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === arrOfPages[arrOfPages.length - 1]}\n          onClick={handlePrevLinkChange}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\n\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const options = [3, 5, 10, 20];\n  const [perPage, setPerPage] = useState(5);\n  const [pageNumber, setPageNumber] = useState(1);\n  const lastIndex = perPage * pageNumber;\n  const firstIndex = lastIndex - perPage;\n\n  const handleOptionChange = ((event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setPageNumber(1);\n  });\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${pageNumber} (items ${firstIndex + 1} - ${lastIndex > items.length ? items.length : lastIndex} of ${items.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleOptionChange}\n          >\n            {options.map(option => <option value={option}>{option}</option>)}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={items.length}\n        perPage={perPage}\n        currentPage={pageNumber}\n        onPageChange={setPageNumber}\n      />\n\n      <ul>\n        {items\n          .slice(firstIndex, lastIndex)\n          .map(item => <li data-cy=\"item\" key={item}>{item}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}